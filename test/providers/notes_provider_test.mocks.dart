// Mocks generated by Mockito 5.4.6 from annotations
// in happy_notes/test/providers/notes_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:happy_notes/entities/note.dart' as _i3;
import 'package:happy_notes/models/note_model.dart' as _i6;
import 'package:happy_notes/models/notes_result.dart' as _i2;
import 'package:happy_notes/services/notes_services.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNotesResult_0 extends _i1.SmartFake implements _i2.NotesResult {
  _FakeNotesResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNote_1 extends _i1.SmartFake implements _i3.Note {
  _FakeNote_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NotesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotesService extends _i1.Mock implements _i4.NotesService {
  MockNotesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.NotesResult> latest(
    int? pageSize,
    int? pageNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #latest,
          [
            pageSize,
            pageNumber,
          ],
        ),
        returnValue: _i5.Future<_i2.NotesResult>.value(_FakeNotesResult_0(
          this,
          Invocation.method(
            #latest,
            [
              pageSize,
              pageNumber,
            ],
          ),
        )),
      ) as _i5.Future<_i2.NotesResult>);

  @override
  _i5.Future<_i2.NotesResult> myLatest(
    int? pageSize,
    int? pageNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #myLatest,
          [
            pageSize,
            pageNumber,
          ],
        ),
        returnValue: _i5.Future<_i2.NotesResult>.value(_FakeNotesResult_0(
          this,
          Invocation.method(
            #myLatest,
            [
              pageSize,
              pageNumber,
            ],
          ),
        )),
      ) as _i5.Future<_i2.NotesResult>);

  @override
  _i5.Future<_i2.NotesResult> tagNotes(
    String? tag,
    int? pageSize,
    int? pageNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #tagNotes,
          [
            tag,
            pageSize,
            pageNumber,
          ],
        ),
        returnValue: _i5.Future<_i2.NotesResult>.value(_FakeNotesResult_0(
          this,
          Invocation.method(
            #tagNotes,
            [
              tag,
              pageSize,
              pageNumber,
            ],
          ),
        )),
      ) as _i5.Future<_i2.NotesResult>);

  @override
  _i5.Future<_i2.NotesResult> searchNotes(
    String? query,
    int? pageSize,
    int? pageNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchNotes,
          [
            query,
            pageSize,
            pageNumber,
          ],
        ),
        returnValue: _i5.Future<_i2.NotesResult>.value(_FakeNotesResult_0(
          this,
          Invocation.method(
            #searchNotes,
            [
              query,
              pageSize,
              pageNumber,
            ],
          ),
        )),
      ) as _i5.Future<_i2.NotesResult>);

  @override
  _i5.Future<_i2.NotesResult> memories() => (super.noSuchMethod(
        Invocation.method(
          #memories,
          [],
        ),
        returnValue: _i5.Future<_i2.NotesResult>.value(_FakeNotesResult_0(
          this,
          Invocation.method(
            #memories,
            [],
          ),
        )),
      ) as _i5.Future<_i2.NotesResult>);

  @override
  _i5.Future<_i2.NotesResult> memoriesOn(String? yyyyMMdd) => (super.noSuchMethod(
        Invocation.method(
          #memoriesOn,
          [yyyyMMdd],
        ),
        returnValue: _i5.Future<_i2.NotesResult>.value(_FakeNotesResult_0(
          this,
          Invocation.method(
            #memoriesOn,
            [yyyyMMdd],
          ),
        )),
      ) as _i5.Future<_i2.NotesResult>);

  @override
  _i5.Future<_i2.NotesResult> getLinkedNotes(int? noteId) => (super.noSuchMethod(
        Invocation.method(
          #getLinkedNotes,
          [noteId],
        ),
        returnValue: _i5.Future<_i2.NotesResult>.value(_FakeNotesResult_0(
          this,
          Invocation.method(
            #getLinkedNotes,
            [noteId],
          ),
        )),
      ) as _i5.Future<_i2.NotesResult>);

  @override
  _i5.Future<_i3.Note> post(_i6.NoteModel? noteModel) => (super.noSuchMethod(
        Invocation.method(
          #post,
          [noteModel],
        ),
        returnValue: _i5.Future<_i3.Note>.value(_FakeNote_1(
          this,
          Invocation.method(
            #post,
            [noteModel],
          ),
        )),
      ) as _i5.Future<_i3.Note>);

  @override
  _i5.Future<_i3.Note> update(
    int? noteId,
    String? content,
    bool? isPrivate,
    bool? isMarkdown,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [
            noteId,
            content,
            isPrivate,
            isMarkdown,
          ],
        ),
        returnValue: _i5.Future<_i3.Note>.value(_FakeNote_1(
          this,
          Invocation.method(
            #update,
            [
              noteId,
              content,
              isPrivate,
              isMarkdown,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Note>);

  @override
  _i5.Future<int> delete(int? noteId) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [noteId],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> undelete(int? noteId) => (super.noSuchMethod(
        Invocation.method(
          #undelete,
          [noteId],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<_i3.Note> get(int? noteId) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [noteId],
        ),
        returnValue: _i5.Future<_i3.Note>.value(_FakeNote_1(
          this,
          Invocation.method(
            #get,
            [noteId],
          ),
        )),
      ) as _i5.Future<_i3.Note>);

  @override
  _i5.Future<_i2.NotesResult> latestDeleted(
    int? pageSize,
    int? pageNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #latestDeleted,
          [
            pageSize,
            pageNumber,
          ],
        ),
        returnValue: _i5.Future<_i2.NotesResult>.value(_FakeNotesResult_0(
          this,
          Invocation.method(
            #latestDeleted,
            [
              pageSize,
              pageNumber,
            ],
          ),
        )),
      ) as _i5.Future<_i2.NotesResult>);

  @override
  _i5.Future<int> purgeDeleted() => (super.noSuchMethod(
        Invocation.method(
          #purgeDeleted,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
}
